[package]
name = "rofi-vscode-mode"
version = "0.3.0"
authors = ["Alessandro Fulgini <fuljo97@gmail.com>"]
edition = "2021"
rust-version = "1.60.0"
description = "A Rofi mode to open Visual Studio Code workspaces"
repository = "https://github.com/fuljo/rofi-vscode-mode"
license = "MIT"
keywords = ["rofi", "mode", "plugin", "vscode"]
categories = ["command-line-utilities"]

exclude = ["/ci", "assets/", ".*", "install.sh", "ci"]

[features]
default = ["rofi"]
rofi = ["dep:pangocairo", "dep:rofi-mode"]

[lib]
crate-type = ["lib", "cdylib"]

[[bin]]
name = "vscode-recent"

[dependencies]
# Common
anyhow = "1.0"
clap = { version = "4.1", features = ["derive"]}
dirs = "5.0"
rusqlite = { version = "0.28", features = ["serde_json"]}
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
url = { version = "2.3", features = ["serde"]}
which = "4.4"
# Rofi-only
pangocairo = { version = "0.15", optional = true } # should be consistent with the dependency from rofi-mode
rofi-mode = { version = "0.2", optional = true }

# Configuration for cargo-release
[package.metadata.release]
sign-commit = true
sign-tag = true
push = false
pre-release-commit-message = "chore(release): prepare for {{version}}"
tag-message = "chore(release): {{crate_name}} version {{version}}"
pre-release-hook = [
    "git-cliff", "--config", "Cargo.toml", "--tag", "{{version}}", "--output", "CHANGELOG.md"
]
publish = false

# Configuration for git-cliff
[package.metadata.git-cliff.changelog]
# changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[package.metadata.git-cliff.git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    # Add hyperlink to issues
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/fuljo/rofi-vscode-mode/issues/${2}))"},
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat", group = "Features"},
    { message = "^fix", group = "Bug Fixes"},
    { message = "^doc", group = "Documentation", skip=true},
    { message = "^perf", group = "Performance", skip=true},
    { message = "^refactor", group = "Refactor", skip=true},
    { message = "^style", group = "Styling", skip=true},
    { message = "^test", group = "Testing"},
    { message = "^ci", group = "Continuouys Integration", skip=true},
    { message = "^chore\\(release\\)", skip = true},
    { message = "^chore", group = "Miscellaneous Tasks"},
    { body = ".*security", group = "Security"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = true
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v[0-9]+.[0-9]+.[0-9]+-(alpha|beta|rc).*"
# regex for ignoring tags
ignore_tags = ""
# sort the tags chronologically
date_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
